{"version":3,"sources":["logo.svg","component/determinant.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","deleteRowCol","matrix","i","res","matrixDRC","concat","shiftedMatrixRow","shift","ind","length","resMat","splice","push","forEach","r","Determinant","classes","React","useState","matrixSize","setMatrixSize","inputLabel","useRef","labelWidth","setLabelWidth","setMatrix","determinant","setDeterminant","calculating","setCalculating","useEffect","current","offsetWidth","Grid","container","justify","alignItems","direction","item","xs","Typography","variant","component","FormControl","className","InputLabel","ref","id","Select","labelId","value","onChange","event","target","mat","Array","fill","loopExt","j","k","style","backgroundColor","borderColor","MenuItem","keys","map","num","key","disabled","width","window","innerWidth","ms0","ms1","Math","floor","String","TextField","type","InputLabelProps","shrink","e","ind1","defaultValue","Button","color","onClick","det","setTimeout","computeDeterminant","determinantCalculate","pow","display","CircularProgress","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9e6216a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 240,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction determinantCalculate(matrix) {\r\n  // console.log(\"determinant matrix--\", matrix);\r\n  if (matrix.length === 2) {\r\n    return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0];\r\n  }\r\n  // return 1;\r\n  let det = 0;\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    // det += Math.pow(-1, i) * i;\r\n    // det+=1;\r\n    // console.log('determinants ---', i, determinant(deleteRowCol(matrix,i)))\r\n    det += Math.pow(-1, i) * determinantCalculate(deleteRowCol(matrix, i));\r\n  }\r\n  return det;\r\n}\r\n\r\nfunction deleteRowCol(matrix, i) {\r\n  const res = [];\r\n  const matrixDRC = [].concat([...matrix]);\r\n  let shiftedMatrixRow = matrixDRC.shift();\r\n  for (let ind = 0; ind < matrixDRC.length; ind++) {\r\n    if (matrixDRC[ind].length > 0) {\r\n      let resMat = [].concat(matrixDRC[ind]);\r\n      resMat.splice(i, 1);\r\n      res.push(resMat);\r\n    }\r\n  }\r\n  res.forEach(r => {\r\n    r[0] *= shiftedMatrixRow[i];\r\n  });\r\n  return res;\r\n}\r\n\r\nexport default function Determinant() {\r\n  const classes = useStyles();\r\n  const [matrixSize, setMatrixSize] = React.useState('');\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const [matrix, setMatrix] = React.useState([]);\r\n  const [determinant, setDeterminant] = React.useState('');\r\n  const [calculating, setCalculating] = React.useState(false);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setMatrixSize(event.target.value);\r\n    const mat = [];\r\n    for(let i=0;i<event.target.value;i++){\r\n      mat.push(new Array(event.target.value).fill(0))\r\n    }\r\n    const loopExt = event.target.value > matrix.length ? matrix.length: event.target.value;\r\n    if(matrix.length>0){\r\n      for(let j=0;j<loopExt;j++){\r\n        for(let k=0;k<loopExt;k++){\r\n          if(matrix[j][k]!==''){\r\n            mat[j][k]=matrix[j][k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setMatrix(mat)\r\n    setDeterminant(\"\");\r\n  };\r\n\r\n  const changeMatrixValue = (event, ind0, ind1) => {\r\n    matrix[ind0][ind1] = event.target.value;\r\n    setMatrix(matrix)\r\n  };  \r\n\r\n  const computeDeterminant = (e, det) => {\r\n    setCalculating(true);\r\n    setTimeout(() => {\r\n      setCalculating(false);\r\n      setDeterminant(det);\r\n    }, 2000);\r\n    // setCalculating(false);\r\n    // setCalculating(false);\r\n  };  \r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems='center' direction='column' spacing={10}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction='column' justify=\"space-around\" alignItems='center'>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            Calculate Determinant of a Matrix\r\n          </Typography>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n              Select Size of Matrix\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={matrixSize}\r\n              onChange={handleChange}\r\n              labelWidth={labelWidth}\r\n              style={{backgroundColor:'white', borderColor:'red'}}\r\n            >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {\r\n              [...Array(10).keys()].map(i=>i+2).map(num=>(\r\n                <MenuItem key={num} value={num} disabled={num===matrixSize}>\r\n                  {num}{' x '}{num}\r\n                </MenuItem>\r\n              ))\r\n            }\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container justify='center' alignItems=\"center\" direction='column' spacing={4} style={{width:window.innerWidth/12*matrixSize}}>\r\n        {\r\n          matrixSize!=='' &&\r\n            [...Array(matrixSize).keys()].map(ms0=>(\r\n              <Grid container key={ms0} justify='center'>\r\n              {\r\n                [...Array(matrixSize).keys()].map(ms1=>(\r\n                <Grid item \r\n                  xs={Math.floor(12/matrixSize)}\r\n                  key={String(ms0)+String(ms1)}\r\n                >\r\n                  <TextField\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    onChange={e=>changeMatrixValue(e, ms0, ms1)}\r\n                    defaultValue = {matrix[ms0][ms1]}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              </Grid>\r\n            ))\r\n        }      \r\n        <Grid item xs={12}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={e=>{\r\n              computeDeterminant(e,determinantCalculate(matrix))\r\n            }}\r\n            style={matrixSize==''?{display:'none'}:{}}\r\n          >\r\n            Compute Determinant\r\n          </Button>\r\n        </Grid>\r\n        {!calculating && determinant!=='' && <Typography variant=\"h6\" component=\"h6\">\r\n          Determinant: {determinant}\r\n        </Typography>}\r\n        {calculating && <CircularProgress/>}\r\n      </Grid>\r\n    </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport logo from './logo.svg';\nimport './App.css';\nimport Determinant from './component/determinant';\nfunction App() {\n  return (\n    <div style={{margin:40}}>\n    <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Determinant/>\n      </Grid>        \n    </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}